name: Build palera1n

on:
  push:
    paths:
      - 'src/**'
      - 'docs/**'
      - 'patches/**'
      - 'include/**'
      - 'Makefile'
      - 'CMakeLists.txt'
      - '.github/workflows/build.yml'
  pull_request:
    paths:
      - 'src/**'
      - 'docs/**'
      - 'patches/**'
      - 'include/**'
      - 'Makefile'
      - 'CMakeLists.txt'
      - '.github/workflows/build.yml'
  workflow_dispatch:

jobs:
  build-docs:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install dependencies (packages)
        run: |
          sudo apt-get -y update
          sudo apt-get -y install mandoc make

      - name: Build Documentation
        run: |
          make -j$(nproc) docs
          mkdir -p ready/docs
          cp docs/*.html docs/mandoc.css docs/palera1n.1 ready/docs

      - name: Upload docs artifact
        uses: actions/upload-artifact@v4
        with:
          name: docs
          path: ready/docs

  build-darwin:
    strategy:
      matrix:
        include:
          - arch: x86_64
            gnu_triple: x86_64-apple-darwin
            os: macosx
            minos: 10.8
    runs-on: macos-13
    env:
      MBEDTLS_VERSION: 3.5.2
      READLINE_VERSION: 8.2
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Dependencies
        run: |
          brew install automake autoconf libtool pkg-config libusb make gnu-sed gettext

      - name: Set Environment Variables
        run: |
          echo "DESTDIR=$(pwd)/sysroot" >> $GITHUB_ENV
          echo "PREFIX=/usr/local" >> $GITHUB_ENV
          echo "CONFIGURE_ARGS=--prefix=/usr/local --disable-shared --enable-static" >> $GITHUB_ENV

      - name: Clone Dependencies
        run: |
          git clone --depth=1 https://github.com/libimobiledevice/libplist
          git clone --depth=1 https://github.com/libimobiledevice/libimobiledevice-glue
          git clone --depth=1 https://github.com/libimobiledevice/libirecovery
          git clone --depth=1 https://github.com/libimobiledevice/libusbmuxd
          git clone --depth=1 https://github.com/libimobiledevice/libimobiledevice

      - name: Build libplist
        run: |
          cd libplist
          ./autogen.sh
          ./configure ${{ env.CONFIGURE_ARGS }}
          make -j$(sysctl -n hw.ncpu)
          make install DESTDIR=${{ env.DESTDIR }}

      - name: Build libimobiledevice-glue
        run: |
          cd libimobiledevice-glue
          ./autogen.sh
          ./configure ${{ env.CONFIGURE_ARGS }}
          make -j$(sysctl -n hw.ncpu)
          make install DESTDIR=${{ env.DESTDIR }}

      - name: Build libirecovery
        run: |
          cd libirecovery
          ./autogen.sh
          ./configure ${{ env.CONFIGURE_ARGS }}
          make -j$(sysctl -n hw.ncpu)
          make install DESTDIR=${{ env.DESTDIR }}

      - name: Build libusbmuxd
        run: |
          cd libusbmuxd
          ./autogen.sh
          ./configure ${{ env.CONFIGURE_ARGS }}
          make -j$(sysctl -n hw.ncpu)
          make install DESTDIR=${{ env.DESTDIR }}

      - name: Build libimobiledevice
        run: |
          cd libimobiledevice
          ./autogen.sh
          ./configure ${{ env.CONFIGURE_ARGS }} --with-mbedtls
          make -j$(sysctl -n hw.ncpu)
          make install DESTDIR=${{ env.DESTDIR }}

      - name: Copy Headers and Libraries
        run: |
          mkdir -p dep_root/include dep_root/lib
          cp -r sysroot/usr/local/include/* dep_root/include/
          cp -r sysroot/usr/local/lib/* dep_root/lib/

      - name: Build palera1n
        run: |
          export CPATH=$(pwd)/dep_root/include
          export LIBRARY_PATH=$(pwd)/dep_root/lib
          make -j$(sysctl -n hw.ncpu)
          mkdir -p ready
          cp src/palera1n ready/palera1n-macosx-${{ matrix.arch }}

      - name: Upload palera1n artifact
        uses: actions/upload-artifact@v4
        with:
          name: palera1n-macosx-${{ matrix.arch }}
          path: ready/palera1n-macosx-${{ matrix.arch }}

  finish-build:
    runs-on: ubuntu-latest
    needs: [build-docs, build-darwin]
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4

      - name: Bundle Artifacts
        run: |
          mkdir -p final_output
          find . -name "palera1n-*" -exec cp {} final_output/ \;
          cp -r docs/* final_output/ || true

      - name: Upload Full Bundle
        uses: actions/upload-artifact@v4
        with:
          name: palera1n-complete-bundle
          path: final_output
